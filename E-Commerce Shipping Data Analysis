Database used : https://www.kaggle.com/datasets/prachi13/customer-analytics
Queried with : MySQL 

#Calculate the average rating given by customers for each mode of shipment# 
select shipment_mode, round(avg(customer_rating),2) as average_rating
from ecommerce_ship
group by shipment_mode; 

# Determine the total number of customer care calls made by customers for each warehouse block.#
select warehouse_block, count(customer_care_calls) as n_care_calls 
from ecommerce_ship 
group by warehouse_block
order by n_care_calls asc;

#Find out the average discount offered for different levels of customer ratings# 
select customer_rating, round(avg(discount_offered),2) as average_discount 
from ecommerce_ship 
group by customer_rating
order by customer_rating asc; 

#Calculate the percentage of orders that reached on time for each mode of shipment.#
select
   shipment_mode,
    sum(case when reached_on_time = 'Y' then 1 else 0 end) as on_time_shipment,
    count(*) as total_orders,
    (sum(case when reached_on_time = 'Y' then 1 else 0 end) / COUNT(*)) * 100 as OnTimePercentage
from 
    ecommerce_ship
group by 
  shipment_mode;

#Order warehouse blocks by their on time delivery#
select warehouse_block, count(reached_on_time) as best_delivery 
from ecommerce_ship 
where reached_on_time = 1 
group by warehouse_block
order by best_delivery desc; 

#Calculate the average cost of products based on their importance level#
select product_importance, avg(cost_of_poduct) as average_cost
from ecommerce_ship
group by product_importance; 

 #Determine the most common mode of shipment for products of different importance levels#
 select product_importance, count(shipment_mode) as most_common, shipment_mode
from ecommerce_ship
group by product_importance, shipment_mode
order by most_common desc ; 

#Analyze the relationship between customer ratings and the number of prior purchases.#
SELECT 
    prior_purchases, ROUND(AVG(customer_rating), 2) AS avg_customer_rating, 
    COUNT(*) AS num_customers
FROM 
    ecommerce_ship 
GROUP BY 
    prior_purchases
ORDER BY 
    prior_purchases;

#Calculate the average discount offered for products that reached on time vs. delayed shipments.#
select avg(discount_offered) as average_discount, 
case when reached_on_time = 1 then 'on time'
when reached_on_time = 0 then 'delay' 
else 'nothing' end as status
from ecommerce_ship
group by status; 

#Determine the average weight of products ordered by male vs. female customers.#
select gender,round(avg(weight_in_gms),2) as average_weight 
from ecommerce_ship 
group by gender;

#Identify the top 5 products with the highest customer ratings#
select id, avg(customer_rating) as average_rating
from ecommerce_ship 
group by id 
order by average_rating desc 
 limit 5 ;
